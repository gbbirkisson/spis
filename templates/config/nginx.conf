{%- if nginx_full %}
error_log /dev/stderr info;
pid       /tmp/nginx.pid;

events {
    # No special events for this simple setup
}

http {
{% endif -%}
server {
    listen       {{ nginx_port }};
    listen  [::]:{{ nginx_port }};

    access_log /dev/stdout;

    gzip on;
    gzip_proxied any;
    gzip_types
        text/css
        text/javascript
        application/javascript
        application/json
        application/wasm
        font/ttf
        font/woff2
        image/jpeg
        image/webp
        image/png
        ;

    location {{ config.api_media_path }} {
        gzip_static on;
        expires 1y;
        add_header Cache-Control "public";
        alias {{ config.media_dir.to_str().unwrap() }};
    }

    location {{ config.api_thumbnail_path }} {
        gzip_static on;
        expires 1y;
        add_header Cache-Control "public";
        alias {{ config.thumbnail_dir().to_str().unwrap() }};
    }

    location / {
{%- if let Some(address) = config.listener.server_address %}
        proxy_pass http://{{ address }};
{% else if let Some(socket) = config.listener.server_socket %}
        proxy_pass http://unix:{{ socket }};
{% else %}
{{ self::validate_listener(config) }}
{%- endif %}
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}
{%- if nginx_full %}
}
{% endif %}
