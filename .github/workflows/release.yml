---
name: Release

on:
  pull_request:  # TODO: REMOVE
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # VERSION: ${{ github.ref_name }}
  VERSION: v0.7.0  # TODO

jobs:
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml

  build-bins:
    name: Build binary ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: ci

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: ./.github/actions/toolchain

      - name: Docker pulls images.
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.target }}
          args: "--locked --release --no-default-features -F release"
          cross-version: v0.2.5

      - name: Store artifact
        uses: actions/upload-artifact@v4
        with:
          name: spis-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/spis

  release-bins:
    name: Release binaries
    runs-on: ubuntu-latest
    needs: build-bins

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release dir
        run: |
          mkdir release

      - name: Get x86_64 server artifact
        uses: actions/download-artifact@v4
        with:
          name: spis-x86_64-unknown-linux-gnu
          path: release

      - name: Get armv7 server artifact
        uses: actions/download-artifact@v4
        with:
          name: spis-armv7-unknown-linux-gnueabihf
          path: release

      - name: Get aarch64 server artifact
        uses: actions/download-artifact@v4
        with:
          name: spis-aarch64-unknown-linux-gnu
          path: release

      - name: Temp
        run: |
          ls release

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0-20
          platforms: all

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: false  # TODO: Set to true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # TODO: Uncomment
      # - name: Upload artifacts to release
      #   uses: AButler/upload-release-assets@v3.0
      #   with:
      #     files: 'release/*'
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     release-tag: ${{ env.VERSION }}
