---
name: Release

on:
  pull_request:  # TODO: REMOVE
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # VERSION: ${{ github.ref_name }}
  VERSION: v0.7.0  # TODO

jobs:
  ci:
    name: Run CI
    uses: ./.github/workflows/ci.yml

  build-bins:
    name: Build binary ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: ci

    strategy:
      matrix:
        target:
          - targx86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: ./.github/actions/toolchain

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.target }}
          args: "--locked --release --no-default-features -F release"

      - name: List target
        run: |
          ls -la target

      # - name: Upload artifacts to release
      #   uses: AButler/upload-release-assets@v3.0
      #   with:
      #     files: 'release/*'
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     release-tag: ${{ env.VERSION }}

  build-docker:
    name: Build docker images
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0-20
          platforms: all

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          # push: true  # TODO
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=gha
          cache-to: type=gha,mode=max
